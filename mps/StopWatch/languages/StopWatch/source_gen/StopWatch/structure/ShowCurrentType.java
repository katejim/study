package StopWatch.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ShowCurrentType {
  no("no", false),
  yes("yes", true);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<ShowCurrentType> getConstants() {
    List<ShowCurrentType> list = ListSequence.fromList(new LinkedList<ShowCurrentType>());
    ListSequence.fromList(list).addElement(ShowCurrentType.no);
    ListSequence.fromList(list).addElement(ShowCurrentType.yes);
    return list;
  }

  public static ShowCurrentType getDefault() {
    return ShowCurrentType.no;
  }

  public static ShowCurrentType parseValue(String value) {
    if (value == null) {
      return ShowCurrentType.getDefault();
    }
    if (value.equals(ShowCurrentType.no.getValueAsString())) {
      return ShowCurrentType.no;
    }
    if (value.equals(ShowCurrentType.yes.getValueAsString())) {
      return ShowCurrentType.yes;
    }
    return ShowCurrentType.getDefault();
  }

  private boolean myValue;

  ShowCurrentType(String name, boolean value) {
    this.myName = name;
    this.myValue = value;
  }

  public boolean getValue() {
    return this.myValue;
  }
}
