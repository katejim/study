package StopWatch.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ButtonsType {
  startButton("startButton", "start"),
  stopButton("stopButton", "stop");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<ButtonsType> getConstants() {
    List<ButtonsType> list = ListSequence.fromList(new LinkedList<ButtonsType>());
    ListSequence.fromList(list).addElement(ButtonsType.startButton);
    ListSequence.fromList(list).addElement(ButtonsType.stopButton);
    return list;
  }

  public static ButtonsType getDefault() {
    return ButtonsType.startButton;
  }

  public static ButtonsType parseValue(String value) {
    if (value == null) {
      return ButtonsType.getDefault();
    }
    if (value.equals(ButtonsType.startButton.getValueAsString())) {
      return ButtonsType.startButton;
    }
    if (value.equals(ButtonsType.stopButton.getValueAsString())) {
      return ButtonsType.stopButton;
    }
    return ButtonsType.getDefault();
  }

  private String myValue;

  ButtonsType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
