package StopWatch.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.InlineCellProvider;

public class UI_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_y8nxe4_a(editorContext, node);
  }

  private EditorCell createCollection_y8nxe4_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_y8nxe4_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_y8nxe4_a0(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_y8nxe4_b0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_y8nxe4_c0(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_y8nxe4_d0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_y8nxe4_e0(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_y8nxe4_f0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_y8nxe4_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Form:");
    editorCell.setCellId("Constant_y8nxe4_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefCell_y8nxe4_b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("formStopWatch");
    provider.setNoTargetText("<no formStopWatch>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new UI_Editor._Inline_y8nxe4_a1a());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("formStopWatch");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  public static class _Inline_y8nxe4_a1a extends InlineCellProvider {
    public _Inline_y8nxe4_a1a() {
      super();
    }

    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createComponent_y8nxe4_a0b0(editorContext, node);
    }

    private EditorCell createComponent_y8nxe4_a0b0(EditorContext editorContext, SNode node) {
      EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "StopWatch.editor.ShapeComponent");
      return editorCell;
    }
  }

  private EditorCell createConstant_y8nxe4_c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "StartButton:");
    editorCell.setCellId("Constant_y8nxe4_c0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefCell_y8nxe4_d0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("startButton");
    provider.setNoTargetText("<no startButton>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new UI_Editor._Inline_y8nxe4_a3a());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("startButton");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  public static class _Inline_y8nxe4_a3a extends InlineCellProvider {
    public _Inline_y8nxe4_a3a() {
      super();
    }

    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createComponent_y8nxe4_a0d0(editorContext, node);
    }

    private EditorCell createComponent_y8nxe4_a0d0(EditorContext editorContext, SNode node) {
      EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "StopWatch.editor.ShapeComponent");
      return editorCell;
    }
  }

  private EditorCell createConstant_y8nxe4_e0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "StopButton:");
    editorCell.setCellId("Constant_y8nxe4_e0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefCell_y8nxe4_f0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("stopButton");
    provider.setNoTargetText("<no stopButton>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new UI_Editor._Inline_y8nxe4_a5a());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("stopButton");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  public static class _Inline_y8nxe4_a5a extends InlineCellProvider {
    public _Inline_y8nxe4_a5a() {
      super();
    }

    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createComponent_y8nxe4_a0f0(editorContext, node);
    }

    private EditorCell createComponent_y8nxe4_a0f0(EditorContext editorContext, SNode node) {
      EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "StopWatch.editor.ShapeComponent");
      return editorCell;
    }
  }
}
